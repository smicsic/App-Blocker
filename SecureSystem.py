# SecureSystem.py
import psutil
import time
import os
import sys
import json
import subprocess

CHECK_INTERVAL = 0.5
APP_NAME = "AppBlocker.exe"

def base_dir():
    # –ü–∞–ø–∫–∞, –≥–¥–µ –ª–µ–∂–∏—Ç —Å–∞–º .exe (–∏–ª–∏ .py –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏)
    if getattr(sys, "frozen", False):
        return os.path.dirname(sys.executable)
    return os.path.dirname(os.path.abspath(__file__))

def status_path():
    return os.path.join(base_dir(), "config.json")

def get_status():
    """–ß–∏—Ç–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∏–∑ config.json –≤ –ø–∞–ø–∫–µ —Å SecureSystem.exe"""
    config_path = os.path.join(base_dir(), "config.json")
    try:
        if os.path.exists(config_path):
            with open(config_path, "r", encoding="utf-8") as f:
                data = json.load(f)
                return data.get("status", "RUNNING")
    except Exception as e:
        print(f"[SecureSystem] ‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è config.json: {e}")
    return "RUNNING"

def is_appblocker_running():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω –ª–∏ AppBlocker"""
    for proc in psutil.process_iter(['name', 'exe']):
        try:
            name = (proc.info.get('name') or "").lower()
            if "appblocker" in name:
                return True
            # –î–æ–ø. –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ –ø—É—Ç–∏ –Ω–∞ —Å–ª—É—á–∞–π –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–π
            exe = (proc.info.get('exe') or "").lower()
            if exe and exe.endswith(APP_NAME.lower()):
                return True
        except (psutil.NoSuchProcess, psutil.AccessDenied):
            continue
    return False

def restart_appblocker():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç AppBlocker –∏–∑ —Ç–æ–π –∂–µ –ø–∞–ø–∫–∏, —á—Ç–æ –∏ SecureSystem"""
    app_path = os.path.join(base_dir(), APP_NAME)
    try:
        if os.path.exists(app_path):
            # cwd=base_dir() ‚Äî —á—Ç–æ–±—ã –≤—Å–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏ —É AppBlocker –±—ã–ª–∏ –∏–∑ —ç—Ç–æ–π –ø–∞–ø–∫–∏
            # CREATE_NO_WINDOW ‚Äî –±–µ–∑ –º–æ—Ä–≥–∞–Ω–∏—è –∫–æ–Ω—Å–æ–ª–∏
            creationflags = 0x08000000 if os.name == "nt" else 0
            subprocess.Popen([app_path], cwd=base_dir(), creationflags=creationflags)
            print(f"[SecureSystem] üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ AppBlocker: {time.strftime('%H:%M:%S')}")
        else:
            print(f"[SecureSystem] ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω {app_path}")
    except Exception as e:
        print(f"[SecureSystem] ‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: {e}")

def main():
    print(f"[SecureSystem] üîê –ó–∞–ø—É—Å–∫. –ü–∞–ø–∫–∞: {base_dir()}")
    print("[SecureSystem] üõ°Ô∏è  –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ AppBlocker –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")

    # –°—Ç–∞—Ä—Ç—É–µ–º AppBlocker —Å—Ä–∞–∑—É, –µ—Å–ª–∏ –æ–Ω –Ω–µ –∑–∞–ø—É—â–µ–Ω
    if not is_appblocker_running():
        restart_appblocker()
        time.sleep(1)

    while True:
        try:
            # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–æ –∫–æ–º–∞–Ω–¥–µ –∏–∑ —Ñ–∞–π–ª–∞
            if get_status() == "EXIT":
                print("[SecureSystem] üõë –ü–æ–ª—É—á–µ–Ω EXIT. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ‚Ä¶")
                break

            # –î–µ—Ä–∂–∏–º AppBlocker –∂–∏–≤—ã–º
            if not is_appblocker_running():
                print(f"[SecureSystem] ‚ö†Ô∏è AppBlocker –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫‚Ä¶ ({time.strftime('%H:%M:%S')})")
                restart_appblocker()

            time.sleep(CHECK_INTERVAL)

        except KeyboardInterrupt:
            print("[SecureSystem] üõë –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ")
            break
        except Exception as e:
            print(f"[SecureSystem] ‚ùå –û—à–∏–±–∫–∞ —Ü–∏–∫–ª–∞: {e}")
            time.sleep(CHECK_INTERVAL)

    # –ß–∏—Å—Ç–∏–º —Å—Ç–∞—Ç—É—Å–Ω—ã–π —Ñ–∞–π–ª, —á—Ç–æ–±—ã –Ω–µ –∑–∞–ª–∏–ø–∞–ª EXIT –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫
    try:
        config_path = status_path()
        if os.path.exists(config_path):
            os.remove(config_path)
            print(f"[SecureSystem] üßπ config.json —É–¥–∞–ª—ë–Ω –ø–æ—Å–ª–µ EXIT")
    except Exception as e:
        print(f"[SecureSystem] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ config.json: {e}")

    print("[SecureSystem] ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    main()
